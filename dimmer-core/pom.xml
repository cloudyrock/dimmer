<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.github.cloudyrock.dimmer</groupId>
        <artifactId>dimmer-parent</artifactId>
        <version>2.2.3-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>dimmer-core</artifactId>
    <name>dimmer-core</name>



    <!-- Web site not created yet -->
    <url>https://github.com/cloudyrock/dimmer.git</url>
    <description>
        Lightweight library to manage feature toggling. Unlike others Dimmer doesn't work
        in switch mode, black or white, It provides a flexible way to respond to disabled
        features by adding customizable behaviours and pre-configured responses.
    </description>

    <properties>

        <slf4j.version>1.7.25</slf4j.version>

        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>


        <!--<jacoco.outputDir>${project.build.directory}/jacoco</jacoco.outputDir>-->
        <jacoco.version>0.7.7.201606060606</jacoco.version>
        <jacoco.out.ut.file>jacoco.exec</jacoco.out.ut.file>
        <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
        <sonar.jacoco.unitReportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.unitReportPath>
        <sonar.jacoco.integrationReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.integrationReportPath>

    </properties>


    <dependencies>

        <!-- https://mvnrepository.com/artifact/cglib/cglib -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>3.2.6</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-junit</artifactId>
            <version>2.0.0.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>




    <profiles>

        <profile>
            <id>noCoverage</id>
        </profile>

        <profile>
            <id>withCoverage</id>
            <activation><activeByDefault>true</activeByDefault></activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <executions>
                            <!-- Prepare agent for unit test -->
                            <execution>
                                <id>jacoco-ut-prepare-agent(${project.name})</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${sonar.jacoco.unitReportPath}</destFile>
                                    <propertyName>jacoco.agent.ut.arg</propertyName>
                                    <append>true</append>
                                </configuration>
                            </execution>

                            <!-- Produce report for unit test -->
                            <execution>
                                <id>jacoco-ut-report(${project.name})</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${sonar.jacoco.unitReportPath}</dataFile>
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                                </configuration>
                            </execution>


                            <!-- Prepare agent for integration test -->
                            <execution>
                                <id>jacoco-it-prepare-agent(${project.name})</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                                <configuration>
                                    <destFile>${sonar.jacoco.integrationReportPath}</destFile>
                                    <propertyName>jacoco.agent.it.arg</propertyName>
                                    <append>true</append>
                                </configuration>
                            </execution>

                            <!-- Produce report for integration test -->
                            <execution>
                                <id>jacoco-it-report(${project.name})</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${sonar.jacoco.integrationReportPath}</dataFile>
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                                </configuration>
                            </execution>

                            <!-- Perform coverage verification for unit test -->
                            <execution>
                                <id>jacoco-ut-verify-coverage(${project.name})</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>

                                    <dataFile>${sonar.jacoco.unitReportPath}</dataFile>
                                    <rules>
                                        <rule>
                                            <element>PACKAGE</element>
                                            <limits>
                                                <limit>
                                                    <counter>LINE</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${threshold.coverage.ut}</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>

                            <!-- Perform coverage verification for integration test -->
                            <execution>
                                <id>jacoco-it-verify-coverage(${project.name})</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>

                                    <dataFile>${sonar.jacoco.integrationReportPath}</dataFile>
                                    <rules>
                                        <rule>
                                            <element>PACKAGE</element>
                                            <limits>
                                                <limit>
                                                    <counter>LINE</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${threshold.coverage.it}</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>



</project>